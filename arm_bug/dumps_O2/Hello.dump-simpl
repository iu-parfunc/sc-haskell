
==================== Tidy Core ====================
2016-08-01 18:36:30.684211 UTC

Result size of Tidy Core = {terms: 167, types: 151, coercions: 12}

$fShowFoo2 :: [Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 40 0}]
$fShowFoo2 = unpackCString# "Foo "#

$w$cshowsPrec [InlPrag=[0]] :: Int# -> Int -> String -> String
[GblId,
 Arity=3,
 Str=DmdType <L,U><L,1*U(U)><L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 40 0] 242 30}]
$w$cshowsPrec =
  \ (ww_s3Ca :: Int#) (ww1_s3Ce :: Int) (w_s3C7 :: String) ->
    case tagToEnum# @ Bool (>=# ww_s3Ca 11) of _ [Occ=Dead] {
      False ->
        ++
          @ Char
          $fShowFoo2
          (case ww1_s3Ce of _ [Occ=Dead] { I# ww3_a1oX ->
           case $wshowSignedInt 11 ww3_a1oX w_s3C7
           of _ [Occ=Dead] { (# ww5_a1p1, ww6_a1p2 #) ->
           : @ Char ww5_a1p1 ww6_a1p2
           }
           });
      True ->
        : @ Char
          shows9
          (++
             @ Char
             $fShowFoo2
             (case ww1_s3Ce of _ [Occ=Dead] { I# ww3_a1oX ->
              case $wshowSignedInt 11 ww3_a1oX (: @ Char shows8 w_s3C7)
              of _ [Occ=Dead] { (# ww5_a1p1, ww6_a1p2 #) ->
              : @ Char ww5_a1p1 ww6_a1p2
              }
              }))
    }

$fShowFoo_$cshowsPrec [InlPrag=INLINE[0]] :: Int -> Foo -> ShowS
[GblId,
 Arity=3,
 Str=DmdType <S,1*U(U)><S,1*U(1*U(U))><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s3C5 [Occ=Once!] :: Int)
                 (w1_s3C6 [Occ=Once!] :: Foo)
                 (w2_s3C7 [Occ=Once] :: String) ->
                 case w_s3C5 of _ [Occ=Dead] { I# ww1_s3Ca [Occ=Once] ->
                 case w1_s3C6 of _ [Occ=Dead] { Foo ww3_s3Ce [Occ=Once] ->
                 $w$cshowsPrec ww1_s3Ca ww3_s3Ce w2_s3C7
                 }
                 }}]
$fShowFoo_$cshowsPrec =
  \ (w_s3C5 :: Int) (w1_s3C6 :: Foo) (w2_s3C7 :: String) ->
    case w_s3C5 of _ [Occ=Dead] { I# ww1_s3Ca ->
    case w1_s3C6 of _ [Occ=Dead] { Foo ww3_s3Ce ->
    $w$cshowsPrec ww1_s3Ca ww3_s3Ce w2_s3C7
    }
    }

$fShowFoo1 :: Foo -> ShowS
[GblId,
 Arity=2,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [20 0] 50 0}]
$fShowFoo1 =
  \ (w_s3C6 :: Foo) (w1_s3C7 :: String) ->
    case w_s3C6 of _ [Occ=Dead] { Foo ww1_s3Ce ->
    $w$cshowsPrec 0 ww1_s3Ce w1_s3C7
    }

$fShowFoo_$cshowList :: [Foo] -> ShowS
[GblId,
 Arity=2,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 60}]
$fShowFoo_$cshowList = showList__ @ Foo $fShowFoo1

$fShowFoo_$cshow :: Foo -> String
[GblId,
 Arity=1,
 Str=DmdType <S,1*U(1*U(U))>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (x_a1n3 [Occ=Once] :: Foo) ->
                 $fShowFoo_$cshowsPrec shows18 x_a1n3 ([] @ Char)}]
$fShowFoo_$cshow =
  \ (x_a1n3 :: Foo) ->
    case x_a1n3 of _ [Occ=Dead] { Foo ww1_s3Ce ->
    $w$cshowsPrec 0 ww1_s3Ce ([] @ Char)
    }

$fShowFoo [InlPrag=[ALWAYS] CONLIKE] :: Show Foo
[GblId[DFunId],
 Str=DmdType m,
 Unf=DFun: \ ->
       D:Show TYPE Foo
              $fShowFoo_$cshowsPrec
              $fShowFoo_$cshow
              $fShowFoo_$cshowList]
$fShowFoo =
  D:Show
    @ Foo $fShowFoo_$cshowsPrec $fShowFoo_$cshow $fShowFoo_$cshowList

mkfoo [InlPrag=NOINLINE] :: Int -> Foo
[GblId, Arity=1, Caf=NoCafRefs, Str=DmdType <L,U>m]
mkfoo = Foo

main2 :: Int
[GblId,
 Caf=NoCafRefs,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
main2 = I# 4

main4 :: Int
[GblId,
 Caf=NoCafRefs,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
main4 = I# 3

main3 :: Foo
[GblId,
 Caf=NoCafRefs,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
main3 = Foo main4

main8 :: [Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 40 0}]
main8 = unpackCString# "hi"#

main7 :: [Char]
[GblId,
 Caf=NoCafRefs,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
main7 = : @ Char shows6 ([] @ Char)

main6 :: String
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
main6 = showLitString main8 main7

main5 :: [Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
main5 = : @ Char shows6 main6

main1 :: State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=1,
 Str=DmdType <L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 175 0}]
main1 =
  \ (s_a1Le [OS=OneShot] :: State# RealWorld) ->
    case hPutStr2 stdout main5 True s_a1Le
    of _ [Occ=Dead] { (# ipv_a1Lh, ipv1_a1Li #) ->
    case newMutVar# @ Foo @ RealWorld main3 ipv_a1Lh
    of _ [Occ=Dead] { (# ipv2_a1L5, ipv3_a1L6 #) ->
    case fork#
           @ (IO ())
           ((\ (eta_a1Lm [OS=OneShot] :: State# RealWorld) ->
               catch#
                 @ ()
                 @ SomeException
                 (case mkfoo main2 of vx_X1ox { Foo ipv4_s1OI ->
                  \ (eta1_a1OO [OS=OneShot] :: State# RealWorld) ->
                    case writeMutVar# @ RealWorld @ Foo ipv3_a1L6 vx_X1ox eta1_a1OO
                    of s2#_a1OT [OS=OneShot] { __DEFAULT ->
                    (# s2#_a1OT, () #)
                    }
                  })
                 childHandler1
                 eta_a1Lm)
            `cast` (Sym (NTCo:IO[0] <()>_R)
                    :: (State# RealWorld -> (# State# RealWorld, () #)) ~R# IO ()))
           ipv2_a1L5
    of _ [Occ=Dead] { (# ipv4_a1OE, ipv5_a1OF #) ->
    case readMutVar# @ RealWorld @ Foo ipv3_a1L6 ipv4_a1OE
    of _ [Occ=Dead] { (# ipv6_X1Qd, ipv7_X1Qf #) ->
    hPutStr2 stdout ($fShowFoo_$cshow ipv7_X1Qf) True ipv6_X1Qd
    }
    }
    }
    }

main :: IO ()
[GblId,
 Arity=1,
 Str=DmdType <L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= main1
               `cast` (Sym (NTCo:IO[0] <()>_R)
                       :: (State# RealWorld -> (# State# RealWorld, () #)) ~R# IO ())}]
main =
  main1
  `cast` (Sym (NTCo:IO[0] <()>_R)
          :: (State# RealWorld -> (# State# RealWorld, () #)) ~R# IO ())

main9 :: State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=1,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 60}]
main9 =
  runMainIO1
    @ ()
    (main1
     `cast` (Sym (NTCo:IO[0] <()>_R)
             :: (State# RealWorld -> (# State# RealWorld, () #)) ~R# IO ()))

main :: IO ()
[GblId,
 Arity=1,
 Str=DmdType,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= main9
               `cast` (Sym (NTCo:IO[0] <()>_R)
                       :: (State# RealWorld -> (# State# RealWorld, () #)) ~R# IO ())}]
main =
  main9
  `cast` (Sym (NTCo:IO[0] <()>_R)
          :: (State# RealWorld -> (# State# RealWorld, () #)) ~R# IO ())


